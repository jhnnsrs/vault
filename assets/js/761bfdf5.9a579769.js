"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3135],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return h}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(a),h=r,m=p["".concat(l,".").concat(h)]||p[h]||c[h]||o;return a?n.createElement(m,i(i({ref:t},d),{},{components:a})):n.createElement(m,i({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},39260:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return h}});var n=a(87462),r=a(63366),o=a(67294),i=a(3905),s=function(e){return o.createElement("button",{className:"button button--outline button--danger",style:{marginBottom:"10px"}},e.children)},l=["components"],u={id:"data",title:"Elements",sidebar_label:"Data",slug:"/data"},d=void 0,c={unversionedId:"data",id:"data",title:"Elements",description:"How we see scientific Data!",source:"@site/docs/data.md",sourceDirName:".",slug:"/data",permalink:"/vault/docs/data",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/data.md",tags:[],version:"current",frontMatter:{id:"data",title:"Elements",sidebar_label:"Data",slug:"/data"},sidebar:"someSidebar",previous:{title:"Automation",permalink:"/vault/docs/automation"},next:{title:"Tasks",permalink:"/vault/docs/tasks"}},p={},h=[{value:"How we see scientific Data!",id:"how-we-see-scientific-data",level:2},{value:"Features",id:"features",level:2},{value:"For Life-Scientists",id:"for-life-scientists",level:4},{value:"Interaction with your Data",id:"interaction-with-your-data",level:3},{value:"Query your Data: GraphQL",id:"query-your-data-graphql",level:3},{value:"Schemas",id:"schemas",level:2},{value:"Arkitekt doesn&#39;t care about Data!",id:"arkitekt-doesnt-care-about-data",level:3},{value:"Datapoints",id:"datapoints",level:3},{value:"Delegation of interesets",id:"delegation-of-interesets",level:3},{value:"Arkitekt",id:"arkitekt",level:4},{value:"Herre",id:"herre",level:4},{value:"Elements",id:"elements",level:4},{value:"Flow",id:"flow",level:4},{value:"How data gets accessed",id:"how-data-gets-accessed",level:3},{value:"Representation Abstraction",id:"representation-abstraction",level:2},{value:"Arrays",id:"arrays",level:2}],m={toc:h};function k(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"how-we-see-scientific-data"},"How we see scientific Data!"),(0,i.kt)("p",null,"Handling scientific (image)data is inherently a mess: Requirements for the shape and size of your dataset\nconstantly change with new technologies. Different modalitites of acquistion\nare popping up every other month and need to be accomodated for. There is a\ndesire to explore relations in your data that are not perfectly evident at the start of your project."),(0,i.kt)("p",null,"No wonder that the basic folder/file structure has survived until today. Most attempts to\nstructure data are just not flexible enough. "),(0,i.kt)("p",null,"Services like Omero have made tremendous efforts to standardize image data and have introduced tools as\nthe bioformats reader and the omero data server. Arkitekt heavily relies on this amazing open source projects\nand is compatible with them (check out the file-reader nodes and the omero-server plugin)."),(0,i.kt)("p",null,"Building on this standardization. we introduce a storage solution that was catered to querying the data in\na meaningfull and simple way, emphazing the relational and dynamic nature of scientific data: Elements"),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("h4",{id:"for-life-scientists"},"For Life-Scientists"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Central unified Storage for all of your Image Data"),(0,i.kt)("li",{parentName:"ul"},"Easy UI for User Data Management"),(0,i.kt)("li",{parentName:"ul"},"Accessible from anywhere"),(0,i.kt)("li",{parentName:"ul"},"Organizes Data into Images, Samples, Experiments"),(0,i.kt)("li",{parentName:"ul"},"Label and Browser through dynamic Metadata"),(0,i.kt)("li",{parentName:"ul"},"Fine grain organization of your Data through Tags"),(0,i.kt)("li",{parentName:"ul"},"Real-Time Updates for creation or updates to your data")),(0,i.kt)("details",null,(0,i.kt)("summary",null," For Developers"),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)("br",null),(0,i.kt)("ul",null,(0,i.kt)("li",null,"Build on the mature Django 3.1 framework"),(0,i.kt)("li",null,"Easy to use GraphQL API with real-time subscribptions"),(0,i.kt)("li",null,"Easily extensible through modules and new data models"),(0,i.kt)("li",null,"Freely deploybale (no dependencies on the rest of the platform)"),(0,i.kt)("li",null,"Powered by high-performant, low latency storage with support for Petabyte sized Datasets(zarr, minio)"),(0,i.kt)("li",null,"Seperate Admin Interface for low level access (django-admin)"),(0,i.kt)("li",null,"Swappable Storage Backends (local or cloud)"),(0,i.kt)("li",null,"pluggable Fine Grained User and App Access Controls (oauth2)")),(0,i.kt)("br",null),(0,i.kt)("h4",null,"Tech Buzzword Nutshell"),"Elements is a schema first storage solution, that exposes an easy to use realtime GraphQL API on top of async Django application, backed by a S3 Object Store and powered by a relational database PostgreSQL. To store image data we use an XArray Interface on top of zarr with efforts to support the ome-zarr ngff standard once it matures to enable massively parallized access.")))),(0,i.kt)("h3",{id:"interaction-with-your-data"},"Interaction with your Data"),(0,i.kt)("p",null,"As a non-programmer life scientist you will not have to deal with our advanced (awesome) data query system. You can simple\nuse the visual Databrowser for browisng and monitoring your private data."),(0,i.kt)(s,{mdxType:"TutorialButton"}," Jump to the Data Tutorial "),(0,i.kt)("p",null,"We highly encourage you to go the extra mile and checkout Elements easy to use API to get structured Data out of our server\nthat can be easily exported to your favourite analysis software and works together with our python interface."),(0,i.kt)(s,{mdxType:"TutorialButton"}," Jump to the GraphQL Tutorial "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def x(4):\n    return \n\n\n\n")),(0,i.kt)("h3",{id:"query-your-data-graphql"},"Query your Data: GraphQL"),(0,i.kt)("p",null,"Taking a dive into the vast of underground "),(0,i.kt)("p",null,"Scientific data is inherently relational and explorational: Images belong\nto Samples and Experiments, they all "),(0,i.kt)("h2",{id:"schemas"},"Schemas"),(0,i.kt)("h3",{id:"arkitekt-doesnt-care-about-data"},"Arkitekt doesn't care about Data!"),(0,i.kt)("p",null,"Arkitekt makes no prior assumptions on how you organize your data. "),(0,i.kt)("h3",{id:"datapoints"},"Datapoints"),(0,i.kt)("p",null,"Every datapoint can register models that Arkitekt will make accessible to your tasks."),(0,i.kt)("h3",{id:"delegation-of-interesets"},"Delegation of interesets"),(0,i.kt)("h4",{id:"arkitekt"},"Arkitekt"),(0,i.kt)("p",null,"Arkitekt cares about your Work and how to distribute it, it knows where work\ncan done, who can is allowed to do what and can also provide new workers if\nnecessary."),(0,i.kt)("h4",{id:"herre"},"Herre"),(0,i.kt)("p",null,"Herre just helps everyone know who who is (Authentication) and which roles\nthat user has with the app he signed in (Authorization)."),(0,i.kt)("h4",{id:"elements"},"Elements"),(0,i.kt)("p",null,"Elements is your Data broker for Image Analysis. In fact it is really the\nonly part that makes this platform an Image Analysis Platform."),(0,i.kt)("h4",{id:"flow"},"Flow"),(0,i.kt)("p",null,"Flow is the workflow manager. It takes your graphical representation and\nruns it according to your definition. It only talks to Arkitekt."),(0,i.kt)("h3",{id:"how-data-gets-accessed"},"How data gets accessed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from arkitekt import Client\nfrom grunnlag.schema import Stack\n\nwith Client():\n    stack = Stack.objects.get(name="imagestack-a")\n    \n    print(stack.data)\n\n')),(0,i.kt)("p",null,"What will Arkitekt do:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"with Client():\n")),(0,i.kt)("p",null,"We connect to the Arkitekt platform through authenticating via Oauth2/JWT and we negotiate our communication and data access protocols.\nAs every Dataprovider has already been registered with the platform, we acquire all necessary credentials for accessing the database\nor webservice."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can through a negotating hook specify which Dataservice you want to associate with the model imported by the schema. This allows\nyou to restrict certain users to using a certain service over another (e.g. use a seperated Database then your Labs Database)"))),(0,i.kt)("h2",{id:"representation-abstraction"},"Representation Abstraction"),(0,i.kt)("p",null,"As Arkitekt doesn't make any assumpations about the shape of the Data and Its providers and only about the API,\nyou can easily use IPFS as your storage backend for."),(0,i.kt)("p",null,"Representation is the interface abstraction we use for imaging data"),(0,i.kt)("h1",{id:"elements-vs-ipfs"},"Elements vs IPFS"),(0,i.kt)("p",null,"Elements as the datacompanion for arkitekt saves files on a S3 Storage cluster (in the docker version we spin up a local\nminio instance for storing your data). Every file you pass to a function will then save the output again on the local instance\nhowever as you can plug and play different data providers into your ",(0,i.kt)("em",{parentName:"p"},"arkitecture")," you can easily save the data on a worldwide distributed\nfilesystem like IPFS and make your data discoverable from anywhere."),(0,i.kt)("h2",{id:"arrays"},"Arrays"),(0,i.kt)("p",null,"As most of your Data"))}k.isMDXComponent=!0}}]);