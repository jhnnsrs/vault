"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9012],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,k=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7808:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"started",title:"Get Started",sidebar_label:"Get Started",slug:"/"},s=void 0,p={unversionedId:"dev/started",id:"dev/started",title:"Get Started",description:"How to develop an App for Arkitekt",source:"@site/docs/dev/started.md",sourceDirName:"dev",slug:"/",permalink:"/vault/docs/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/dev/started.md",tags:[],version:"current",frontMatter:{id:"started",title:"Get Started",sidebar_label:"Get Started",slug:"/"}},c={},u=[{value:"How to develop an App for Arkitekt",id:"how-to-develop-an-app-for-arkitekt",level:3}],d={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"how-to-develop-an-app-for-arkitekt"},"How to develop an App for Arkitekt"),(0,o.kt)("p",null,"Arkitekt provides its own little command line utilitly to download\nnecessary configuration to find the servers and guides you through\nthe app generation. Just open a folder where you want your App\nto be developed in and call."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"arkitekt init\n")),(0,o.kt)("p",null,"The cli will guide you through a normal setup process for an application\nfor the platform."),(0,o.kt)("p",null,"During the installation process you have the choice to create a folder\nstructure that reflects your new apps capabilities:"),(0,o.kt)("p",null,"You can choose for your app to be templated as agent or client."),(0,o.kt)("p",null,"None of these decisions are final, you can easily transition between the apps."),(0,o.kt)("h1",{id:"client"},"Client"),(0,o.kt)("p",null,"A client app is a script or GUI that can access the data (of the login user)\nand manipulate it on the fly. A Client app is not controllable by arkitekt so\ncannot provide an API with Tasks and Nodes. You can however controll other apps\nthrough the use interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from mikro import gql\nfrom arkitekt import use\n\nquery = gql("""\nquery {\n    mystacks(order: "-created_at", limit: 5){\n        id \n        name\n    }\n}\n""").run()\n# gets the latestes 5 stacks for the login user \n\n\nprint([rep.name for rep in query.mystacks])\n# shows the name\n\n\ndisplay_stacks = use("napari/display_stacks")\n# gets the implementation of naparis display stacks\n\ndisplay_reps(query.mystacks) # displays the stacks\n\n')),(0,o.kt)("p",null,"This is an example of a fully functional client app. Client apps\nare create for prototyping a specific analysis and or generating\nspecific analysis that no one in your lab might need."),(0,o.kt)("h1",{id:"agent"},"Agent"),(0,o.kt)("p",null,"Agents are apps that do stuff and can be called by other apps\nand orchestrated in workflows. They provide a remote procedure\ncall interface for their register functions and automatically\nmake themselvers discoverable on the platform."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from arkitekt import register\nfrom mikro import Stack\n\n\n@register()\ndef treshold_stack(stack: Stack, threshold=3) -> Stack:\n\n    nestack = stack.data[stack.data > threshold]\n    return Stack.objects.from_xarray(newstack, derived=stack)\n\n\n")),(0,o.kt)("p",null,"Agents:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"- UserApp\n\n    - GUI App\n    - Script App\n    - Docker App\n\n- BackendApp\n")),(0,o.kt)("p",null,"Clients:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"-  User\n")),(0,o.kt)("p",null,"In the and you should be left with a folder structure like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"folder:\n    - fakts.yaml\n    - run.py\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\n```bash\narkitekt run\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from arkitekt import use\n\nuse()\n\n\n\n\n\n")))}f.isMDXComponent=!0}}]);